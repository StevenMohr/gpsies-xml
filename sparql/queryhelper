
#takes an array of hashes (latitude-longitude pairs :lat :long)
#and an interval for the points
#returns a SPARQL-Query
def querybuilder(points, interval)
  query = "SELECT DISTINCT ?subject ?label ?abstract ?lat ?long WHERE
    {"
    points.each do |p|
    
      query += " {
        ?subject geo:lat ?lat.
        ?subject geo:long ?long.
        ?subject rdfs:comment ?abstract. 
        ?subject rdfs:label ?label.
        OPTIONAL { ?subject dbpprop:type ?type } 
        FILTER(
        ?lat - #{p[:lat]} <= #{interval} && 
        #{p[:lat]} - ?lat <= #{interval} && 
        ?long - #{p[:long]} <= #{interval} &&
        #{p[:long]} - ?long <= #{interval} && 
        lang(?label) = \"de\" && 
        lang(?abstract) = \"de\"
        && ?type != \"Quarter\"@en
        ).
        "
       query += "} UNION " unless p == points.last
    end
  query += "} }"
end

#creates an array of hashes (latitude-longitude pairs :lat :long) 
def create_coord_array(result)
   # extract waypoint information
    coords = Array.new
 
    doc = REXML::Document.new(result)
 
    i=0
    doc.elements.each('waypoints/waypoint') do |ele|
      coords[i] = Hash.new
      coords[i][:lat] = ele.attributes["latitude"]
      coords[i][:long] = ele.attributes["longitude"]
      i += 1
    end

    coords[i] = Hash.new
    #Coordinates of Ulm Minster 
    coords[i][:lat] = 48.3986
    coords[i][:long] = 9.9925
    
    # print all coordinates
    coords.each do |c|
      puts "Latitude: #{c[:lat]}, Longitude: #{c[:long]}"
    end
end